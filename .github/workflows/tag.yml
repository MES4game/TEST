name: Tag & Release on PR Merge

on:
  pull_request:
    types: [closed]
    branches: [ "main" ]

jobs:
  tag_and_release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract version & title from PR title
        id: extractmeta
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_TITLE="$(echo "${PR_TITLE}" | xargs)"

          if [[ "${PR_TITLE}" =~ ^r/([0-9]+\.[0-9]+\.[0-9]+)[[:space:]]-[[:space:]](.+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            RELEASE_TITLE="$(echo "${BASH_REMATCH[2]}" | xargs)"
          else
            echo "PR title does not match expected pattern: r/X.Y.Z - Title"
            exit 1
          fi

          echo "version=${VERSION}" >> "${GITHUB_OUTPUT}"
          echo "release_title=${RELEASE_TITLE}" >> "${GITHUB_OUTPUT}"

      - name: Extract description & changelog from PR body
        id: extractcontent
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_BODY="$(echo "${PR_BODY}" | xargs)"

          if [[ "${PR_BODY}" =~ ^##[[:space:]]Description$'\n\n'([^\n].+)$'\n\n'---$'\n\n'##[[:space:]]Changelog$'\n\n'(.*) ]]; then
            DESCRIPTION="$(echo "${BASH_REMATCH[1]}" | xargs)"
            CHANGELOG="$(echo "${BASH_REMATCH[2]}" | xargs)"
          else
            echo "PR description does not match expected format:"
            echo "## Description"
            echo "<description>"
            echo ""
            echo "---"
            echo ""
            echo "## Changelog"
            echo "<changelog>"
            exit 1
          fi

          echo "description<<EOF" >> "${GITHUB_OUTPUT}"
          echo "${DESCRIPTION}" >> "${GITHUB_OUTPUT}"
          echo "EOF" >> "${GITHUB_OUTPUT}"

          echo "changelog<<EOF" >> "${GITHUB_OUTPUT}"
          echo "${CHANGELOG}" >> "${GITHUB_OUTPUT}"
          echo "EOF" >> "${GITHUB_OUTPUT}"

      - name: Get last release version tag
        id: lasttag
        run: |
          LAST_TAG=$(git tag -l "v[0-9]*.[0-9]*.[0-9]*" \
            | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' \
            | sort -V \
            | tail -n 1)

          echo "last_tag=${LAST_TAG}" >> "${GITHUB_OUTPUT}"

      - name: Create tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag "v${{ steps.extractmeta.outputs.version }}"
          git push origin "v${{ steps.extractmeta.outputs.version }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extractmeta.outputs.version }}
          name: ${{ steps.extractmeta.outputs.release_title }}
          body: |
            ## ðŸš€ Release Notes

            ${{ steps.extractcontent.outputs.description }}

            ---

            ## ðŸ”¥ Changes Since Last Release

            ${{ steps.extractcontent.outputs.changelog }}

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.lasttag.outputs.last_tag }}...v${{ steps.extractmeta.outputs.version }}

            ---

            _This release was generated by GitHub Actions._
