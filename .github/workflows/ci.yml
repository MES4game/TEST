name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  setup:
    name: Setup Node.js environment
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          install: true

  lint:
    name: Run lint scanning
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      security-events: write
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: javascript-typescript
          build-mode: none
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Run ESLint
        if: matrix.language == 'javascript-typescript'
        uses: ./.github/actions/eslint

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Testing
        run: echo "TODO unit testing"

  build:
    name: Run build for testing
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Restore webpack cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .webpackcache
            build
          key: cache-webpack-${{ hashFiles('src/**/*', 'public/**/*', 'postcss.config.mjs', 'webpack.config.mjs', 'package.json') }}-${{ github.run_attempt }}-${{ github.run_id }}
          restore-keys: |
            cache-webpack-${{ hashFiles('src/**/*', 'public/**/*', 'postcss.config.mjs', 'webpack.config.mjs', 'package.json') }}-${{ github.run_attempt }}-
            cache-webpack-${{ hashFiles('src/**/*', 'public/**/*', 'postcss.config.mjs', 'webpack.config.mjs', 'package.json') }}-
            cache-webpack-

      - name: Build Testing
        run: |
          [ -d .webpackcache ] && echo "Using webpack cache" && ls -al .webpackcache/default-production || echo "No webpack cache found"
          [ -d build ] && echo "Using build cache" && ls -al build || echo "No build cache found"
          npm run build:run -- --output-path=build

      - name: Save webpack cache
        uses: actions/cache/save@v4
        with:
          path: |
            .webpackcache
            build
          key: cache-webpack-${{ hashFiles('src/**/*', 'public/**/*', 'postcss.config.mjs', 'webpack.config.mjs', 'package.json') }}-${{ github.run_attempt }}-${{ github.run_id }}
