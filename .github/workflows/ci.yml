name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  lint:
    name: Run lint scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: javascript-typescript
          build-mode: none
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-node

      - name: Use eslint cache
        id: cache-eslint
        uses: actions/cache/restore@v4
        with:
          path: .eslintcache
          key: cache-eslint-${{ hashFiles('src/**/*', 'eslint.config.mjs', 'tsconfig.json', 'package.json') }}
          restore-keys: cache-eslint-

      - name: Run ESLint
        env:
          SARIF_ESLINT_IGNORE_SUPPRESSED: "true"
        run: npm run lint:run -- --format gha --output-file eslint-results.sarif
        continue-on-error: true

      - name: Use eslint cache
        id: cache-eslint
        uses: actions/cache/save@v4
        with:
          path: .eslintcache
          key: cache-eslint-${{ hashFiles('src/**/*', 'eslint.config.mjs', 'tsconfig.json', 'package.json') }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Upload eslint results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  test:
    if: ${{ always() }}
    needs: lint
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-node

      - name: Testing
        run: echo TODO test

  build:
    if: ${{ always() }}
    needs: [lint, test]
    name: Test build of app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-node

      - name: Use webpack cache
        id: cache-webpack
        uses: actions/cache/restore@v4
        with:
          path: .webpackcache
          key: cache-webpack-${{ hashFiles('src/**/*', 'public/**/*', 'postcss.config.mjs', 'webpack.config.mjs', 'package.json') }}
          restore-keys: cache-webpack-

      - name: Build Testing
        run: npm run build

      - name: Use webpack cache
        id: cache-webpack
        uses: actions/cache/save@v4
        with:
          path: .webpackcache
          key: cache-webpack-${{ hashFiles('src/**/*', 'public/**/*', 'postcss.config.mjs', 'webpack.config.mjs', 'package.json') }}
